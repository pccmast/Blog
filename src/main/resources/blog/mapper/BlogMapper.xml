<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="blog.mapper.BlogMapper">

    <select id="getBlogList" resultMap="blog">
        select blog.id as blog_id,
        blog.title as blog_title,
        blog.content_description as blog_description,
        blog.content as blog_content,
        users.id as user_id,
        users.username as user_username,
        users.avatar as user_avatar,
        blog.createdAt as blog_created_at,
        blog.updatedAt as blog_updated_at
        from blog left join users
        on blog.user_id = users.id
        <where>
            <if test="userId != null">
                blog.user_id = #{userId}
            </if>
            <if test="atIndex != null">
                and blog.atIndex = #{atIndex}
            </if>
        </where>
        order by blog_updated_at desc
        limit #{page}, 10
    </select>

    <select id="countBlog" resultType="Integer">
        select count(*)
        from blog left join users
        on blog.user_id = users.id
        <where>
            <if test="userId != null">
                blog.user_id = #{userId}
            </if>
            <if test="atIndex != null">
                and blog.atIndex = #{atIndex}
            </if>
        </where>
    </select>

    <insert id="createNewBlog" parameterType="blog.entities.Blog">
        insert into blog
        (title, content_description, content, user_id,
        createdAt, updatedAt, atIndex)
        values (#{title}, #{description}, #{content},
        #{userId}, NOW(), NOW(), #{atIndex})
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="getBlogInfoByBlogId" parameterType="Integer" resultMap="blog">
        select blog.id                  as blog_id,
               blog.title               as blog_title,
               blog.content_description as blog_description,
               blog.content             as blog_content,
               users.id                 as user_id,
               users.username           as user_username,
               users.avatar             as user_avatar,
               blog.createdAt           as blog_created_at,
               blog.updatedAt           as blog_updated_at
        from blog
                 left join users
                           on blog.user_id = users.id
        where blog.id = #{id}
    </select>

    <update id="reviseBlog" parameterType="blog.entities.Blog">
        update blog
        <set>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="description != null">
                content_description = #{description},
            </if>
            <if test="atIndex != null">
                atIndex = #{atIndex},
            </if>
            updatedAt = NOW()
        </set>
        where id = #{id}
    </update>

    <delete id="deleteBlog" parameterType="Integer">
        delete
        from blog
        where id = #{id}
    </delete>

    <resultMap id="blog" type="blog.entities.BlogInfoItem">
        <id property="id" column="blog_id"/>
        <result property="title" column="blog_title"/>
        <result property="description" column="blog_description"/>
        <result property="content" column="blog_content"/>
        <result property="updatedAt" column="blog_updated_at"/>
        <result property="createdAt" column="blog_created_at"/>
        <result property="atIndex" column="blog_atIndex"/>
        <association property="user" javaType="blog.entities.UserInfo">
            <id property="id" column="user_id"/>
            <result property="username" column="user_username"/>
            <result property="avatar" column="user_avatar"/>
        </association>
    </resultMap>
</mapper>